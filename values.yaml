# Default values for superset.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: apache/superset
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2.1.0"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: NodePort
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8088
  nodePort: 30088

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: "10.77.198.171.nip.io"
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 1Gi

#
livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /health
    port: http


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []



volumeMounts: []


nodeSelector: {}

tolerations: []

affinity: {}

superset:
  configOverrides:
    enable_proxy_fix: true
    mapbox_api_key: ""
    secret_key: "YOUR_OWN_RANDOM_GENERATED_SECRET_KEY"
    # Настройки подключения к базе данных
    SQLALCHEMY_DATABASE_URI: "postgresql+psycopg2://superset:superset@my-superset-postgresql:5432/superset"
    # Настройки Redis и Celery
    CELERY_BROKER_URL: "redis://:superset@my-superset-redis:6379/0"
    CELERY_RESULT_BACKEND: "redis://:superset@my-superset-redis:6379/1"
    # Настройки кэша
    CACHE_CONFIG:
      CACHE_TYPE: "redis"
      CACHE_DEFAULT_TIMEOUT: 300
      CACHE_KEY_PREFIX: "superset_results"
      CACHE_REDIS_HOST: "my-superset-redis"
      CACHE_REDIS_PORT: 6379
      CACHE_REDIS_PASSWORD: "superset"
      CACHE_REDIS_DB: 2
  
  init:
    enabled: true
    loadExamples: true
    adminUser:
      username: admin
      firstname: Superset
      lastname: Admin
      email: admin@superset.com
      password: admin
    timeout: 300
    
  # Worker настройки
  worker:
    enabled: true
    replicaCount: 1
    resources:
      limits:
        cpu: "1000m"
        memory: "2Gi"
      requests:
        cpu: "500m"
        memory: "1Gi"

  # Beat настройки для периодических задач
  beat:
    enabled: true
    resources:
      limits:
        cpu: "500m"
        memory: "1Gi"
      requests:
        cpu: "250m"
        memory: "512Mi"

postgresql:
  enabled: true
  image:
    repository: postgres
    tag: "13"
    pullPolicy: IfNotPresent
  postgresqlUsername: superset
  postgresqlPassword: superset
  postgresqlDatabase: superset
  service:
    port: 5432
  persistence:
    enabled: true
    size: 8Gi

redis:
  enabled: true
  image:
    repository: redis
    tag: "6.2"
    pullPolicy: IfNotPresent
  architecture: standalone
  auth:
    enabled: true
    password: superset
  persistence:
    enabled: true
    size: 8Gi

# Настройки доступа
service:
  type: NodePort
  port: 8088
  nodePort: 30088

# Ресурсы для основного приложения
resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Настройки для celery (очередь задач)
celery:
  enabled: true
  workers: 2
  resources:
    limits:
      cpu: "1000m"
      memory: "2Gi"
    requests:
      cpu: "500m"
      memory: "1Gi"

# Отключаем vault
vault:
  enabled: false

# vault:
#   enabled: true
#   addr: "http://vault:8200"
#   secretPath: "secret/data/superset"
#   role: "superset"
#   authPath: "auth/kubernetes"


# jenkinsEnvironment:
#   VAULT_ADDR: "http://vault:8200"
#   VAULT_SECRET_PATH: "secret/data/superset"
#   VAULT_ROLE: "superset"
#   VAULT_AUTH_PATH: "auth/kubernetes"
#   K8S_NAMESPACE: "superset"
#   SERVICE_ACCOUNT: "superset"
